{"version":3,"sources":["components/08-useReducer/todoReducer.js","components/08-useReducer/TodoListItem.jsx","components/08-useReducer/TodosList.jsx","components/08-useReducer/TodoApp.jsx","hooks/useForm.js","index.js"],"names":["todoReducer","state","action","type","payload","filter","todo","id","map","done","TodoListItem","index","handleToggle","handleDelete","className","onClick","desc","TodosList","todos","i","init","JSON","parse","localStorage","getItem","TodoApp","useReducer","dispatch","initialState","useState","values","setValues","target","name","value","useForm","description","handleInputChange","reset","useEffect","setItem","stringify","length","todoId","onSubmit","e","preventDefault","trim","newTodo","Date","getTime","console","log","onChange","placeholder","autoComplete","ReactDOM","render","document","getElementById"],"mappings":"uLAAaA,EAAc,WAAwB,IAAvBC,EAAsB,uDAAd,GAAIC,EAAU,uCAC9C,OAASA,EAAOC,MACZ,IAAK,MACD,MAAM,GAAN,mBAAWF,GAAX,CAAkBC,EAAOE,UAC7B,IAAK,SAED,OAAOH,EAAMI,QAAQ,SAAAC,GAAI,OAAIA,EAAKC,IAAML,EAAOE,WACnD,IAAK,SAML,IAAK,aACD,OAAOH,EAAMO,KAAI,SAAAF,GACb,OAAGA,EAAKC,KAAOL,EAAOE,QACX,2BACAE,GADP,IAEIG,MAAOH,EAAKG,OAGTH,KAGnB,QAEI,OAAOL,I,sBCxBNS,EAAe,SAAC,GAA+C,IAA9CJ,EAA6C,EAA7CA,KAAMK,EAAuC,EAAvCA,MAAOC,EAAgC,EAAhCA,aAAcC,EAAkB,EAAlBA,aACrD,OACI,qBAEIC,UAAU,kBAFd,UAII,oBAAGA,UAAS,UAAKR,EAAKG,MAAQ,YAAcM,QAAS,WAAKH,EAAaN,EAAKC,KAA5E,cAAoFI,EAAM,EAA1F,IAA8FL,EAAKU,QACnG,wBACID,QAAS,WAAMF,EAAaP,EAAKC,KACjCO,UAAU,iBAFd,wBCPCG,EAAY,SAAC,GAAyC,IAAxCC,EAAuC,EAAvCA,MAAOL,EAAgC,EAAhCA,aAAcD,EAAkB,EAAlBA,aAE5C,OACI,oBAAIE,UAAU,8BAAd,SAEII,EAAMV,KAAK,SAACF,EAAMa,GAAP,OAEP,aADA,CACC,EAAD,CAA+Bb,KAAMA,EAAMK,MAAQQ,EAAGN,aAAcA,EAAcD,aAAcA,GAA3EN,EAAKC,UCCpCa,EAAO,WACT,OAAOC,KAAKC,MAAMC,aAAaC,QAAQ,WAAa,IAG3CC,EAAU,WAAO,IAAD,EAEGC,qBAAW1B,EAAa,GAAIoB,GAF/B,mBAEjBF,EAFiB,KAEVS,EAFU,OCZN,WAAwB,IAAvBC,EAAsB,uDAAP,GAAO,EAEdC,mBAASD,GAFK,mBAEnCE,EAFmC,KAE3BC,EAF2B,KAa1C,MAAO,CAACD,EAPkB,SAAC,GAAe,IAAbE,EAAY,EAAZA,OACzBD,EAAU,2BACHD,GADE,kBAEJE,EAAOC,KAAOD,EAAOE,UANf,WACXH,EAAWH,KDYqCO,CAAQ,CACxDC,YAAa,KALQ,mBAIhBA,EAJgB,KAIhBA,YAAeC,EAJC,KAIkBC,EAJlB,KAOzBC,qBAAU,WACNhB,aAAaiB,QAAQ,QAASnB,KAAKoB,UAAUvB,MAC9C,CAACA,IAoCJ,OACI,gCACI,8CAAkBA,EAAMwB,OAAxB,OACA,uBACA,sBAAK5B,UAAU,MAAf,UACI,qBAAKA,UAAU,gBAAf,SAEI,cAAC,EAAD,CAAWI,MAAOA,EAAOL,aAzCpB,SAAC8B,GAMlBhB,EALe,CACXxB,KAAM,SACNC,QAASuC,KAsCoD/B,aAjChD,SAAC+B,GAElBhB,EAAS,CAAExB,KAAM,SAAUC,QAASuC,SAkC5B,sBAAK7B,UAAU,YAAf,UACI,2DACA,uBACA,uBAAM8B,SAjCD,SAACC,GAElB,GADAA,EAAEC,mBACCV,EAAYW,OAAOL,QAAU,GAAhC,CAGA,IAAMM,EAAU,CACZzC,IAAI,IAAI0C,MAAOC,UACflC,KAAMoB,EACN3B,MAAM,GAMVkB,EAJe,CACXxB,KAAM,MACNC,QAAS4C,IAGbV,IACAa,QAAQC,IAAIlC,KAiBA,UACI,uBACIf,KAAK,OACL8B,KAAK,cACLnB,UAAU,eACVoB,MAAOE,EACPiB,SAAUhB,EACViB,YAAY,eACZC,aAAa,QAEjB,qBAAKzC,UAAU,eAAf,SACI,wBAAQX,KAAK,SAASW,UAAU,yCAAhC,oCE9E5B0C,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.5d718a28.chunk.js","sourcesContent":["export const todoReducer = (state = [], action) =>{\r\n    switch ( action.type ) {\r\n        case 'add':\r\n            return [...state, action.payload];\r\n        case 'delete':\r\n\r\n            return state.filter( todo => todo.id != action.payload )\r\n        case 'toggle':\r\n            return state.map( todo => (\r\n                todo.id === action.payload\r\n                    ? {...todo, done:!todo.done}\r\n                    : todo\r\n                ));\r\n        case 'toggle-old':\r\n            return state.map(todo =>{\r\n                if(todo.id === action.payload){\r\n                    return {\r\n                        ...todo,\r\n                        done: !todo.done \r\n                    }\r\n                }else{\r\n                    return todo;\r\n                }\r\n            });\r\n        default:\r\n\r\n            return state;\r\n    }\r\n}","import React from 'react'\r\n\r\nexport const TodoListItem = ({todo, index ,handleToggle, handleDelete}) => {\r\n    return (\r\n        <li\r\n           \r\n            className=\"list-group-item\"\r\n        > \r\n            <p className={`${todo.done && 'complete'}`} onClick={()=>{handleToggle(todo.id)}}> {index+1}.{todo.desc}</p> \r\n            <button\r\n                onClick={()=>{ handleDelete(todo.id) }}\r\n                className=\"btn btn-danger\"\r\n            >\r\n                Borrar\r\n            </button>\r\n        </li>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { TodoListItem } from './TodoListItem'\r\nexport const TodosList = ({todos, handleDelete, handleToggle}) => {\r\n    \r\n    return (\r\n        <ul className=\"list-group list-group-flush\">\r\n        {\r\n            todos.map( (todo, i) =>(\r\n                // todoListItem, todo, index\r\n                <TodoListItem  key={ todo.id } todo={todo} index ={i} handleDelete={handleDelete} handleToggle={handleToggle} />\r\n            ))\r\n        }\r\n    </ul>\r\n    )\r\n}\r\n","import React, { useEffect, useReducer } from 'react'\r\nimport { todoReducer } from './todoReducer';\r\nimport { useForm } from '../../hooks/useForm';\r\n\r\nimport './style.css';\r\nimport { TodosList } from './TodosList';\r\n\r\n\r\n\r\n\r\nconst init = () =>{ \r\n    return JSON.parse(localStorage.getItem('todos')) || [];\r\n}\r\n\r\nexport const TodoApp = () => {\r\n\r\n    const [ todos, dispatch ] = useReducer(todoReducer, [], init);\r\n\r\n    const [{ description }, handleInputChange, reset] = useForm({\r\n        description: ''\r\n    });\r\n    useEffect(() => {\r\n        localStorage.setItem('todos', JSON.stringify(todos))\r\n    }, [todos]);\r\n\r\n    const handleDelete = (todoId) =>{\r\n        const action = {\r\n            type: 'delete',\r\n            payload: todoId\r\n\r\n        }\r\n        dispatch(action);\r\n    }\r\n    const handleToggle = (todoId) =>{\r\n        \r\n        dispatch({ type: 'toggle', payload: todoId});\r\n    }\r\n    // console.log(description);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(description.trim().length <= 1 ){\r\n            return;\r\n        }\r\n        const newTodo = {\r\n            id: new Date().getTime(),\r\n            desc: description,\r\n            done: false\r\n        }\r\n        const action = {\r\n            type: 'add',\r\n            payload: newTodo\r\n        }\r\n        dispatch(action);\r\n        reset()\r\n        console.log(todos);\r\n        \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>CositasApp ({ todos.length })</h1>\r\n            <hr/>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-7 mb-5\">\r\n                    {/* TodosList todo, handleDelete, handleToggle */}\r\n                    <TodosList todos={todos} handleDelete={handleDelete} handleToggle={handleToggle}/>\r\n                </div>\r\n\r\n                <div className=\"col-md-5 \">\r\n                    <h4>Agregar Cositas Por Hacer</h4>\r\n                    <hr/>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <input \r\n                            type=\"text\"\r\n                            name=\"description\"\r\n                            className=\"form-control\"\r\n                            value={description}\r\n                            onChange={handleInputChange}\r\n                            placeholder=\"Aprender ...\"\r\n                            autoComplete=\"off\"\r\n                        />\r\n                        <div className=\"d-grid gap-2\">\r\n                            <button type=\"submit\" className=\"btn btn-outline-primary mt-1 btn-block\">\r\n                                Agregar\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import { useState } from 'react'\r\n\r\nexport const useForm = (initialState = {}) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n    const reset =  () =>{\r\n        setValues( initialState );\r\n    }\r\n    const handleInputChange = ( {target} ) =>{\r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.value\r\n        })\r\n    }\r\n\r\n    return [values, handleInputChange, reset];\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { TodoApp } from './components/08-useReducer/TodoApp';\n\nReactDOM.render(\n  <TodoApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}